service: wordle-leaderboard
frameworkVersion: '3'
configValidationMode: error

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: live
  httpApi:
    disableDefaultEndpoint: true
    shouldStartNameWithService: true
    cors:
      allowedOrigins:
        - 'https://wordle.kellenanker.com'
        - 'http://wordle.kellenanker.com'
        - 'http://localhost:3000'
      allowedHeaders: '*'
      allowCredentials: false
      maxAge: 300

  tags:
    Serverless: true

  stackTags:
    Serverless: true

  iam:
    role:
      statements:
        - Effect: Allow
          Action: secretsmanager:GetSecretValue
          Resource:
            - Ref: TwilioAuthTokenSecret
            - Ref: WebhookTokenSecret
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource: !GetAtt ScoresTable.Arn

  environment:
    LOG_LEVEL: DEBUG
    SCORES_TABLE: !Ref ScoresTable
    TWILIO_AUTH_TOKEN: !Ref TwilioAuthTokenSecret
    WEBHOOK_TOKEN: !Ref WebhookTokenSecret

package:
  individually: true
  patterns:
    - 'helpers/**'
    - '!node_modules/**'
    - '!package-lock.json'
    - '!package.json'
    - '!poetry.lock'
    - '!pyproject.toml'

functions:
  wordleLeaderboard:
    name: wordle-leaderboard
    handler: main.api_handler
    memorySize: 256
    timeout: 29
    events:
      - httpApi:
          path: '/post'
          method: POST
      - httpApi:
          path: '/health'
          method: GET
      - httpApi:
          path: '/leaderboard'
          method: GET
      - httpApi:
          path: '/today'
          method: GET
      - httpApi:
          path: '/puzzles'
          method: GET
      - httpApi:
          path: '/puzzle/{puzzle}'
          method: GET
      - httpApi:
          path: '/users'
          method: GET
      - httpApi:
          path: '/user/{user}'
          method: GET
    layers:
      - Ref: PythonRequirementsLambdaLayer

custom:
  domainName: kellenanker.com
  fqdn: api.wordle.${self:custom.domainName}

  customDomain:
    domainName: ${self:custom.fqdn}
    basePath: ''
    stage: live
    createRoute53Record: true
    certificateName: ${self:custom.fqdn}
    autoDomain: true
    autoDomainWaitFor: 300
    endpointType: regional
    securityPolicy: tls_1_2
    apiType: http

  customCertificate:
    certificateName: ${self:custom.fqdn}
    hostedZoneNames: ${self:custom.domainName}.

  logRetentionInDays: 7

  pythonRequirements:
    layer: true

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-certificate-creator
  - serverless-plugin-log-retention
  - serverless-plugin-resource-tagging
  - serverless-plugin-git-variables

resources:
  Resources:
    ScoresTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: wordle-leaderboard
        AttributeDefinitions:
          - AttributeName: PhoneNumber
            AttributeType: N
          - AttributeName: PuzzleNumber
            AttributeType: N
        KeySchema:
          - AttributeName: PhoneNumber
            KeyType: HASH
          - AttributeName: PuzzleNumber
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    TwilioAuthTokenSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Description: Twilio Auth Token
        Name: twilio/auth-token
    WebhookTokenSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Description: Twilio Webhook Token
        Name: twilio/webhook-token
